"""Remove is_client and is_pro

Revision ID: eef1aedc3eab
Revises: 4ee42b5ef152
Create Date: 2025-03-09 18:25:48.778732

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'eef1aedc3eab'
down_revision: Union[str, None] = '4ee42b5ef152'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('users', sa.Column('is_active', sa.Boolean(), nullable=True))
    op.add_column('users', sa.Column('role', postgresql.ARRAY(sa.String()), nullable=True))
    op.drop_constraint('users_email_key', 'users', type_='unique')
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.drop_column('users', 'is_pro')
    op.drop_column('users', 'is_client')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('users', sa.Column('is_client', sa.BOOLEAN(), autoincrement=False, nullable=True))
    op.add_column('users', sa.Column('is_pro', sa.BOOLEAN(), autoincrement=False, nullable=True))
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.create_unique_constraint('users_email_key', 'users', ['email'])
    op.drop_column('users', 'role')
    op.drop_column('users', 'is_active')
    # ### end Alembic commands ###
